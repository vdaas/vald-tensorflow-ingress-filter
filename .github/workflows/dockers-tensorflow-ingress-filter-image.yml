#
# Copyright (C) 2019-2022 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "Build docker image: tensorflow-ingress-filter"
on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
      - "v*.*.*"
      - "*.*.*-*"
      - "v*.*.*-*"
    paths:
      - ".github/actions/docker-build/action.yaml"
      - ".github/workflows/dockers-tensorflow-ingress-filter-image.yml"
      - ".github/workflows/update-version.yml"
      - "Dockerfile"
      - "entrypoint.sh"
      - "main.py"
      - "Makefile"
      - "requirements.txt"
      - "VALD_TENSORFLOW_INGRESS_FILTER_VERSION"
  pull_request:
    paths:
      - ".github/actions/docker-build/action.yaml"
      - ".github/workflows/dockers-tensorflow-ingress-filter-image.yml"
      - ".github/workflows/update-version.yml"
      - "Dockerfile"
      - "entrypoint.sh"
      - "main.py"
      - "Makefile"
      - "requirements.txt"
      - "VALD_TENSORFLOW_INGRESS_FILTER_VERSION"
  pull_request_target:
    paths:
      - ".github/actions/docker-build/action.yaml"
      - ".github/workflows/dockers-tensorflow-ingress-filter-image.yml"
      - ".github/workflows/update-version.yml"
      - "Dockerfile"
      - "entrypoint.sh"
      - "main.py"
      - "Makefile"
      - "requirements.txt"
      - "VALD_TENSORFLOW_INGRESS_FILTER_VERSION"

jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo $JSON
        env:
          JSON: ${{ toJSON(github) }}
      - name: Dump job context
        run: echo $JSON
        env:
          JSON: ${{ toJSON(job) }}
      - name: Dump steps context
        run: echo $JSON
        env:
          JSON: ${{ toJSON(steps) }}
      - name: Dump runner context
        run: echo $JSON
        env:
          JSON: ${{ toJSON(runner) }}
      - name: Dump strategy context
        run: echo $JSON
        env:
          JSON: ${{ toJSON(strategy) }}
      - name: Dump matrix context
        run: echo $JSON
        env:
          JSON: ${{ toJSON(matrix) }}
  build:
    strategy:
      max-parallel: 4
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) || (github.event.pull_request.head.repo.fork == true && github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'ci/approved')) || (github.event_name == 'push' && github.ref == 'refs/heads/main') || startsWith( github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Build and Publish
        id: build_and_publish
        uses: ./.github/actions/docker-build
        with:
          target: tensorflow-ingress-filter
          builder: ${{ steps.buildx.outputs.name }}

